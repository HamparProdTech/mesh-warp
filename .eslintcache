[{"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js":"1","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js":"2","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js":"3","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/CanvasDrawer/index.js":"4","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/MeshDrawer/index.js":"5","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Grid/index.js":"6","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js":"7"},{"size":565,"mtime":1608258628628,"results":"8","hashOfConfig":"9"},{"size":5522,"mtime":1612057364166,"results":"10","hashOfConfig":"9"},{"size":333,"mtime":1608258588834,"results":"11","hashOfConfig":"9"},{"size":623,"mtime":1611977315418,"results":"12","hashOfConfig":"9"},{"size":3676,"mtime":1611989187342,"results":"13","hashOfConfig":"9"},{"size":10713,"mtime":1612064333001,"results":"14","hashOfConfig":"9"},{"size":1228,"mtime":1612062490000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1f3ricy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js",[],["34","35"],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js",["36"],"import React, { useEffect, useRef, useState, useReducer } from \"react\"\n\nimport CanvasDrawer from \"./components/CanvasDrawer\"\nimport MeshDrawer from \"./components/MeshDrawer\"\nimport Grid from \"./components/Grid\"\n\nimport \"./App.scss\"\nimport GridManager from \"./lib/GridManager\"\n\nexport const Actions = {\n  MOUSE_DOWN: \"mousedown\",\n  MOUSE_UP: \"mouseup\",\n  MOUSE_MOVE: \"mousemove\",\n}\n\nexport default function App() {\n  const imgUrl = useRef(require(\"./assets/textures/asset_01a.jpg\").default).current\n  const [sock, setSock] = useState()\n\n  const [rightSource, setRightSource] = useState()\n  const [leftSource, setLeftSource] = useState()\n\n  const sourceRef = useRef()\n  const holderRef = useRef()\n  const [bodyRef, setBody] = useState()\n\n  const [listeners, setListeners] = useState()\n  const [mouseDownPos, setMouseDownPos] = useState()\n  const indexRef = useRef()\n  const [forceUpdate, setForceUpdate] = useState()\n\n  useEffect(() => {\n    if (imgUrl && !sock) {\n      setTimeout(() => {\n        console.log(imgUrl)\n        const img = new Image()\n        img.src = imgUrl\n\n        img.onload = () => {\n          setTimeout(() => {\n            console.log(`%c FUGGIN LOADED`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n            console.log(img)\n            setSock(img)\n          }, 200)\n        }\n      }, 200)\n    }\n  }, [imgUrl])\n\n  // useEffect(() => {\n  //   if (sock) {\n  //     setTimeout(() => {\n  //       console.log(`%c sock updated`, \"color: black; background-color: orange; font-style: italic; padding: 2px;\")\n  //       // 720x1188\n  //       // let holder = document.getElementById(\"canvas-holder\")\n  //       let holder = holderRef.current\n  //       while (holder.childNodes.length) holder.removeChild(holder.childNodes[0])\n\n  //       let { width, height } = sock\n  //       let can_width = width\n  //       let can_height = height\n  //       let asset_height = height\n\n  //       let socks = [\"right\", \"left\"]\n\n  //       socks.forEach((id, i) => {\n  //         let x = 0\n  //         let y = 0\n\n  //         let canvas_item = document.createElement(\"canvas\")\n  //         canvas_item.id = `dummy_canvas_${id}`\n\n  //         switch (id) {\n  //           case \"right\":\n  //             can_width = 294\n  //             can_height = 971\n\n  //             asset_height = 975\n  //             x = -4\n  //             y = -2\n\n  //             break\n  //           case \"left\":\n  //             can_width = 297\n  //             can_height = asset_height = 974\n  //             break\n  //           default:\n  //             break\n  //         }\n\n  //         let asset_ratio = height / asset_height\n\n  //         if (id == \"left\") x = -width / asset_ratio + can_width\n\n  //         canvas_item.width = can_width * asset_ratio\n  //         canvas_item.height = can_height * asset_ratio\n  //         canvas_item\n  //           .getContext(\"2d\")\n  //           .drawImage(sock, x * asset_ratio, y * asset_ratio, width, asset_height * asset_ratio)\n  //         holder.appendChild(canvas_item)\n\n  //         switch (id) {\n  //           case \"right\":\n  //             setRightSource(canvas_item)\n  //             break\n  //           case \"left\":\n  //             setLeftSource(canvas_item)\n  //             break\n  //           default:\n  //             break\n  //         }\n  //       })\n  //     }, 200)\n  //   }\n  // }, [sock])\n\n  // useEffect(() => {\n  //   if (leftSource && rightSource) {\n  //     console.log(`%c saucy`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n  //     console.log(leftSource)\n  //     console.log(rightSource)\n  //     console.warn(\"sources!!!!!!\")\n  //   }\n  // }, [leftSource, rightSource])\n\n  useEffect(() => {\n    if (!bodyRef) {\n      setBody(document.getElementsByTagName(\"body\")[0])\n    }\n  }, [bodyRef])\n\n  function handleMouseEvent(event, index) {\n    // console.warn(\"MOUSE EVENT THING\", event.type)\n    switch (event.type) {\n      case Actions.MOUSE_DOWN:\n        bodyRef.addEventListener(Actions.MOUSE_MOVE, handleMouseEvent, false)\n        bodyRef.addEventListener(Actions.MOUSE_UP, handleMouseEvent, false)\n        setMouseDownPos(index)\n        indexRef.current = index\n        break\n      case Actions.MOUSE_UP:\n        bodyRef.removeEventListener(Actions.MOUSE_MOVE, handleMouseEvent, false)\n        bodyRef.removeEventListener(Actions.MOUSE_UP, handleMouseEvent, false)\n\n        break\n      case Actions.MOUSE_MOVE:\n        // console.log(mouseDownPos, indexRef.current)\n        GridManager.updateDot(indexRef.current, event.pageX, event.pageY)\n        setForceUpdate(Math.random())\n        // console.log(\n        //   `%c  rollin rollin rollin`,\n        //   \"color: black; background-color: cyan; font-style: italic; padding: 2px;\"\n        // )\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <div>\n      <div> nuh uh buddy</div>\n      {sock && <Grid src={sock} width={sock.width} height={sock.height} dispatch={handleMouseEvent} />}\n      {/* {sock && (\n        <div ref={holderRef} className=\"canvas-container\">\n          <CanvasDrawer right={true} img={sock} width={sock.width / 2} height={sock.height} />\n          <CanvasDrawer ref={sourceRef} img={sock} width={sock.width / 2} height={sock.height} />\n          {leftSource && rightSource && (\n            <>\n              <MeshDrawer src={rightSource} />\n              <MeshDrawer src={leftSource} />\n            </>\n          )}\n\n          <img alt=\"skin\" src={sock.src} />\n        </div>\n      )} */}\n    </div>\n  )\n}\n","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/CanvasDrawer/index.js",["37"],"import React, { useEffect, useRef, useState } from \"react\"\n\nconst CanvasDrawer = React.forwardRef((props, ref) => {\n  useEffect(() => {\n    console.log(`%c rendered the canvas`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n\n    var ctx = ref.current.getContext(\"2d\")\n    var img = props.img\n    ctx.drawImage(\n      img,\n      props.width * !(props.right === true),\n      0,\n      props.width,\n      props.height,\n      0,\n      0,\n      props.width,\n      props.height\n    )\n  }, [ref])\n\n  return <canvas ref={ref} width={props.width} height={props.height} />\n})\n\nexport default CanvasDrawer\n","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/MeshDrawer/index.js",["38"],"import React, { useEffect, useRef, useState } from \"react\"\n\nconst MeshDrawer = React.forwardRef((props, ref) => {\n  const canRef = useRef()\n\n  console.log(`%c props`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n  const { width, height } = props.src\n\n  function linearSolution(r1, s1, t1, r2, s2, t2, r3, s3, t3) {\n    // make them all floats\n    r1 = parseFloat(r1)\n    s1 = parseFloat(s1)\n    t1 = parseFloat(t1)\n    r2 = parseFloat(r2)\n    s2 = parseFloat(s2)\n    t2 = parseFloat(t2)\n    r3 = parseFloat(r3)\n    s3 = parseFloat(s3)\n    t3 = parseFloat(t3)\n\n    var a = ((t2 - t3) * (s1 - s2) - (t1 - t2) * (s2 - s3)) / ((r2 - r3) * (s1 - s2) - (r1 - r2) * (s2 - s3))\n    var b = ((t2 - t3) * (r1 - r2) - (t1 - t2) * (r2 - r3)) / ((s2 - s3) * (r1 - r2) - (s1 - s2) * (r2 - r3))\n    var c = t1 - r1 * a - s1 * b\n\n    return [a, b, c]\n  }\n\n  useEffect(() => {\n    console.log(`%c rendered the canvas`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n    var img = props.src\n\n    console.log(`%c KILL ME`, \"color: black; background-color: cyan; font-style: italic; padding: 2px;\")\n\n    var c = canRef.current.getContext(\"2d\")\n    var w = canRef.current.width\n    var h = canRef.current.height\n\n    c.clearRect(0, 0, w, h)\n\n    var x1 = 25 + Math.round(Math.random() * (w - 50))\n    var y1 = 25 + Math.round(Math.random() * (h - 50))\n    var x2 = 25 + Math.round(Math.random() * (w - 50))\n    var y2 = 25 + Math.round(Math.random() * (h - 50))\n    var x3 = 25 + Math.round(Math.random() * (w - 50))\n    var y3 = 25 + Math.round(Math.random() * (h - 50))\n    var x4 = 25 + Math.round(Math.random() * (w - 50))\n    var y4 = 25 + Math.round(Math.random() * (h - 50))\n\n    // x1 = 0\n    // y1 = 0\n    // x2 = w\n    // y2 = 0\n    // x3 = 0\n    // y3 = h\n    // x4 = w\n    // y4 = h\n\n    var xm = linearSolution(0, 0, x1, img.width, 0, x2, 0, img.height, x3)\n    var ym = linearSolution(0, 0, y1, img.width, 0, y2, 0, img.height, y3)\n\n    var xn = linearSolution(img.width, img.height, x4, img.width, 0, x2, 0, img.height, x3)\n    var yn = linearSolution(img.width, img.height, y4, img.width, 0, y2, 0, img.height, y3)\n\n    c.save()\n    // another matrix argument order bug?\n    c.setTransform(xm[0], ym[0], xm[1], ym[1], xm[2], ym[2])\n    c.beginPath()\n    c.moveTo(0, 0)\n    c.lineTo(img.width, 0)\n    c.lineTo(0, img.height)\n    c.lineTo(0, 0)\n    c.closePath()\n    c.fill()\n    c.clip()\n    console.warn(\"INAGE IS\")\n    console.log(img)\n    console.warn(\"~~~~~~\")\n    c.drawImage(img, 0, 0, img.width, img.height)\n    c.restore()\n\n    c.save()\n    // another matrix argument order bug?\n    c.setTransform(xn[0], yn[0], xn[1], yn[1], xn[2], yn[2])\n    c.beginPath()\n    c.moveTo(img.width, img.height)\n    c.lineTo(img.width, 0)\n    c.lineTo(0, img.height)\n    c.lineTo(img.width, img.height)\n    c.closePath()\n    c.fill()\n    c.clip()\n    c.drawImage(img, 0, 0, img.width, img.height)\n    c.restore()\n\n    c.beginPath()\n    c.arc(x1, y1, 15, 0, Math.PI * 2, true)\n    c.closePath()\n    c.fillStyle = \"#ff0000\"\n    c.fill()\n\n    c.beginPath()\n    c.arc(x2, y2, 15, 0, Math.PI * 2, true)\n    c.closePath()\n    c.fillStyle = \"#00ff00\"\n    c.fill()\n\n    c.beginPath()\n    c.arc(x3, y3, 15, 0, Math.PI * 2, true)\n    c.closePath()\n    c.fillStyle = \"#00ffff\"\n    c.fill()\n\n    c.beginPath()\n    c.arc(x4, y4, 15, 0, Math.PI * 2, true)\n    c.closePath()\n    c.fillStyle = \"#ffffff\"\n    c.fill()\n\n    console.log(`%c drawn`, \"color: black; background-color: red; font-style: italic; padding: 2px;\")\n    console.log(img)\n  }, [canRef])\n\n  return <canvas ref={canRef} width={width} height={height} />\n})\n\nexport default MeshDrawer\n","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Grid/index.js",["39"],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":48,"column":6,"nodeType":"46","endLine":48,"endColumn":14,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":20,"column":6,"nodeType":"46","endLine":20,"endColumn":11,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":121,"column":6,"nodeType":"46","endLine":121,"endColumn":14,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":29,"column":6,"nodeType":"46","endLine":29,"endColumn":15,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sock'. Either include it or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has missing dependencies: 'props.height', 'props.img', 'props.right', and 'props.width'. Either include them or remove the dependency array.",["57"],"React Hook useEffect has a missing dependency: 'props.src'. Either include it or remove the dependency array.",["58"],"React Hook useEffect has missing dependencies: 'height' and 'width'. Either include them or remove the dependency array.",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [imgUrl, sock]",{"range":"68","text":"69"},"Update the dependencies array to be: [props.height, props.img, props.right, props.width, ref]",{"range":"70","text":"71"},"Update the dependencies array to be: [canRef, props.src]",{"range":"72","text":"73"},"Update the dependencies array to be: [height, isBuilt, width]",{"range":"74","text":"75"},[1358,1366],"[imgUrl, sock]",[511,516],"[props.height, props.img, props.right, props.width, ref]",[3572,3580],"[canRef, props.src]",[671,680],"[height, isBuilt, width]"]